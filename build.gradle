apply plugin: "ch.so.agi.gretl"
apply plugin: "de.undercouch.download"

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.steps.*
import de.undercouch.gradle.tasks.download.Download

ext {
    fosnrs = [2401,2402,2403,2404,2405,2406,2407,2408]
    url = "https://data.geo.admin.ch/ch.swisstopo-vd.amtliche-vermessung/DM01AVCH24D/ITF/SO/"
}

task fubar() {
    doLast {
        println "fubar"
    }
}

task beforeDownload() {
    doLast {
        println "Paradise By The Dashboard Light"
    }
}

task validateXTF(type: IliValidator) {
    dataFiles = ["/Users/stefan/Downloads/rohr_20170915_umbau_errors.xtf"]
}

task downloadZipFile(type: Download) {
    src "https://data.geo.admin.ch/ch.swisstopo-vd.amtliche-vermessung/DM01AVCH24D/ITF/SO/2547.zip"
    dest "/Users/stefan/Downloads/opendata/"
    overwrite true
}

task unzipFile(dependsOn: downloadZipFile, type: Copy) {
    from {
        file('/Users/stefan/Downloads/opendata/').listFiles().findAll {
            it.name.endsWith('.zip')
        }.collect { 
            zipTree(it) 
        }
    }
    into "/Users/stefan/Downloads/opendata/"
    include '**/*.itf'
    include '**/*.ITF'

}

fosnrs.each { fosnr ->
    def nr = fosnr-1
    def dependsOnTask = "downloadFile$nr"
    if (fosnr == fosnrs.first() ) {
        dependsOnTask = "beforeDownload"
    }
    //task "downloadFile$it"(type:Copy, dependsOn: dependsOnTask) {
    task "downloadFile$fosnr"(dependsOn: dependsOnTask) {
        doLast {
            println "I'm task number $fosnr"
        }
    }
}

fosnrs.each { fosnr ->
    task "downloadFileV2_$fosnr()" {
        doLast {
            println "I'm task number $fosnr"
        }
    }
}

task afterDownload() {
    doLast {
        println "Dancing in the Dark"
    }
}

afterDownload.dependsOn {
    tasks.findAll { task -> task.name.startsWith('downloadFileV2_') }
}